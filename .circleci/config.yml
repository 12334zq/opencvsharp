version: 2
jobs:
  build:
    docker:
      - image: ubuntu:18.04

    steps:
      - checkout

      - run:
          name: Greeting
          command: echo Hello, world.

      - run:
          name: Install dependencies
          command: |
              pwd
              current_path=$(pwd)
              apt -y update
              apt -y install wget unzip build-essential checkinstall cmake pkg-config yasm git gfortran libjpeg8-dev libpng-dev software-properties-common
              add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
              apt -y update && apt -y install libjasper1 libtiff-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine2-dev libv4l-dev
              cd /usr/include/linux
              ln -s -f ../libv4l1-videodev.h videodev.h
              cd $current_path
              apt -y install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgtk2.0-dev libtbb-dev qt5-default libatlas-base-dev libfaac-dev libmp3lame-dev libtheora-dev libvorbis-dev libxvidcore-dev libopencore-amrnb-dev libopencore-amrwb-dev libavresample-dev x264 v4l-utils libwebp-dev tesseract-ocr libtesseract-dev libleptonica-dev

      - restore_cache:
          keys:
            - opencv-v4.1.1-{{ checksum "/root/project/opencv_ubuntu/lib" }}

      - run:
          name: Build OpenCV
          command: |
              wget https://github.com/opencv/opencv/archive/4.1.1.zip -Oopencv-4.1.1.zip && unzip opencv-4.1.1.zip
              wget https://github.com/opencv/opencv_contrib/archive/4.1.1.zip -Oopencv_contrib-4.1.1.zip && unzip opencv_contrib-4.1.1.zip
              cd opencv-4.1.1 && mkdir build && cd build
              cmake -DCMAKE_BUILD_TYPE=Release -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.1.1/modules -DENABLE_CXX11=ON -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_DOCS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_opencv_java=OFF -DBUILD_opencv_python=OFF -DCMAKE_INSTALL_PREFIX=/root/project/opencv_ubuntu ..
              make -j4
              make install
              ldconfig
              cd ../../
              pwd
              ls
              echo "-----"
              ls /root/project/opencv_ubuntu
              echo "-----"
              ls /root/project/opencv_ubuntu/lib

      - save_cache:
          key: opencv-v4.1.1-{{ checksum "/root/project/opencv_ubuntu/lib" }}
          paths:
            - /root/project/opencv_ubuntu

      - run:
          name: Build OpenCvSharp
          command: |
              mkdir src/build && cd $_
              cmake -D CMAKE_PREFIX_PATH=/root/project/opencv_ubuntu ..
              make -j4
              ls 
              ls OpenCvSharpExtern
              cp OpenCvSharpExtern/libOpenCvSharpExtern.so /root/project/nuget/

      - run:
          name: Create NuGet package
          command: |
            apt install gnupg ca-certificates
            apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
            "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
            apt update
            apt install mono-devel

            curl -o /usr/local/bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
            nuget pack $env:/root/project/nuget/OpenCvSharp4.runtime.ubuntu.18.04-x64.nuspec -OutputDirectory $env:/root/project/artifacts_ubuntu
